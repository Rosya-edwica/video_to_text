**Техническое задание для разработки системы обработки и подбора навыков для курсов и профессий на образовательной платформе Эдвики**

1. **Цель проекта:**
   Разработать систему, которая автоматизирует процесс подбора навыков для курсов и профессий, а также очищает базу данных от избыточных и нерелевантных навыков.

2. **Основные задачи:**

   2.1. Реализовать интеграцию с GPT для генерации списков навыков по заданным запросам.
   
   2.2. Создать механизм связывания навыков с курсами и профессиями в базе данных.
   
   2.3. Разработать алгоритм очистки базы данных от нерелевантных навыков и дубликатов.

3. **Функциональные требования:**

   3.1. **Подбор навыков для курсов:**
   
       - Система должна отправлять запрос к GPT для генерации списка из 20 ключевых навыков для заданного курса.
       - Система должна проверять наличие сгенерированных навыков в базе данных.
       - Если навык присутствует в базе, система должна устанавливать связь между навыком и курсом.
       - Если навыка нет в базе, он должен быть пропущен.

   3.2. **Подбор навыков для профессий:**
   
       - Система должна отправлять запрос к GPT для генерации списка из 20 навыков и знаний для заданной профессии.
       - Система должна проверять наличие сгенерированных навыков в базе данных.
       - Если навык присутствует в базе, система должна устанавливать связь между навыком и профессией.
       - Если навыка нет в базе, он должен быть сохранен как новый элемент и установлена связь с профессией.

   3.3. **Обработка от мусора навыков:**
   
       - Система должна переводить навыки на русский язык с помощью Google Translate API или аналогичного сервиса.
       - Система должна удалять избыточные символы и заменять некоторые символы на пробелы.
       - Система должна идентифицировать и удалять стоп-слова.
       - Система должна приводить навыки к их начальной форме с использованием библиотеки PyMorphy2.
       - Система должна искать и удалять дубликаты навыков, используя полное и нечеткое совпадение (с помощью библиотек Spacy и FuzzyWuzzy).

4. **Нефункциональные требования:**

   - Высокая точность перевода и сопоставления навыков.
   - Эффективность поиска дубликатов и стоп-слов.
   - Простота интеграции с существующей базой данных.
   - Масштабируемость системы для обработки больших объемов данных.

5. **Требования к реализации:**

   - Использование Python для разработки алгоритмов обработки данных.
   - Интеграция с API GPT для генерации навыков.
   - Использование Google Translate API или аналогичного сервиса для перевода навыков.
   - Использование библиотек PyMorphy2, Spacy и FuzzyWuzzy для обработки текста.

6. **Этапы реализации:**

   - Разработка и тестирование запросов к GPT.
   - Реализация механизма связывания навыков с курсами и профессиями.
   - Разработка и тестирование алгоритма очистки базы данных.
   - Интеграция системы с существующей инфраструктурой платформы Эдвики.

7. **Тестирование:**

   - Проведение модульного тестирования каждой компоненты системы.
   - Проведение интеграционного тестирования для проверки взаимодействия компонентов системы.
   - Проведение нагрузочного тестирования для оценки производительности системы при больших объемах данных.

8. **Сроки и этапы сдачи проекта:**

   - Разработка должна быть разделена на итерации с четко определенными сроками и результатами каждой итерации.
   - Предоставление отчетов о ходе выполнения проекта на регулярной основе.

9. **Бюджет и ресурсы:**

   - Определение бюджета на основе оценки трудозатрат и необходимых ресурсов.
   - Планирование расходов на лицензирование API и другие внешние сервисы.

10. **Поддержка и обслуживание:**

    - Разработка плана поддержки и обновления системы после ее внедрения.
    - Обеспечение обучения персонала для работы с новой системой.